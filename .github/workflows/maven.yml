# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MavenProject Build
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      jar_version: ${{ steps.bump.outputs.jar_version }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Bump jar version
      id: bump
      run: |
        POMPATH=myapp
        OLD_VERSION=$(grep -m1 "<version>" $POMPATH/pom.xml | sed -E 's|<version>(.*)</version>|\1|g' | tr -d '[:space:]')
        read -ra PARTS <<< "$OLD_VERSION"  #PARTS=(${OLD_VERSION//./ })
        PATCH=$((PARTS[2] + 1))
        NEW_VERSION="${PARTS[0]}.${PARTS[1]}.${PATCH}"
        mvn -q versions:set -DnewVersion="${NEW_VERSION}" --file $POMPATH/pom.xml
        echo ::set-output name=jar_version::${NEW_VERSION}
     
    - name: Run Maven tests
      run: |
         mvn test -f POMPATH/pom.xml
      
    - name:  save jar artifact
      uses: actions/upload-artifact@v2
      with:
        name: jar-artifact
        path: ${{ github.workspace }}/myapp/target/*.jar
        retention-days: 1
        
    - name: Docker build
      working-directory: ./
      run: |
         docker build --no-cache --build-arg POM=${{steps.bump.outputs.jar_version}} -t zoharperets/maven-proj:${{steps.bump.outputs.jar_version}} .
         
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWD }}
        
    - name: Docker push
      run: |
        docker push zoharperets/maven-proj -a
        
    - name: Run Docker 
      run: |
        docker run -dit --name java-app zoharperets/maven-proj:${{steps.bump.outputs.jar_version}}
        
    - name: Push to Github
      run: |
       git config --global user.email ${{ secrets.EMAIL_GITHUB }}
       git config --global user.name ${{ secrets.USERNAME_GITHUB }}
       git add ./myapp/pom.xml
       git commit -m "update pm"
       git push
